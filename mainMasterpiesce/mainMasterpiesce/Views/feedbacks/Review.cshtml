@model IEnumerable<mainMasterpiesce.Models.feedback>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminDashBoard.cshtml";
}

<script src="https://kit.fontawesome.com/cd43dd9542.js" crossorigin="anonymous"></script>


@section Content {
    <form action="Review">
        <input type="text" class="form-control" placeholder="Search here" name="search">
        <button class="btn" type="submit"><i class="fa fa-search"></i></button>
    </form>
}
<div class="page-wrapper">
    <div class="content container-fluid">

        <!-- Page Header -->
        <div class="page-header">
            <div class="row">
                <div class="col-sm-7 col-auto">
                    <h3 class="page-title">Reviews</h3>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
                        <li class="breadcrumb-item active">Reviews</li>
                    </ul>
                </div>
                <div class="col-sm-5 col">

                    @*@Html.ActionLink("Create New", "Create")*@


                    @*<a href="~/specializations/Create" data-toggle="modal" class="btn btn-primary float-right mt-2">Add</a>*@
                </div>
            </div>
        </div>
        <!-- /Page Header -->
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">


                            <table class="datatable table table-hover table-center mb-0">
                                <thead>
                                    <tr>

                                        <th>FeedBack Id</th>
                                        <th>Patient Name</th>
                                        <th>Doctor Name</th>
                                        <th>Description</th>
                                        <th>Rate</th>
                                        <th>state</th>
                                        <th>Date</th>
                                        <th class="text-right">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {


                                        <tr>
                                            <td>@item.feedbackId</td>



                                            <td>

                                                <h2 class="table-avatar">
                                                    <a href="profile.html" class="avatar avatar-sm mr-2"><img class="avatar-img rounded-circle" src="~/Content/images/@Url.Content(item.patient.picpatient)" alt="@item.patient.picpatient"></a>
                                                    <a href="profile.html">@item.patient.patientName </a>
                                                </h2>
                                            </td>

                                            <td>

                                                <h2 class="table-avatar">
                                                    <a href="profile.html" class="avatar avatar-sm mr-2"><img class="avatar-img rounded-circle" src="@Url.Content(item.doctor.picdoctor)" alt="@item.doctor.picdoctor"></a>
                                                    <a href="profile.html">@item.doctor.doctorName</a>
                                                </h2>
                                            </td>

                                            <td>
                                                @item.comment.Substring(0, item.comment.Length / 4)
                                                @*@item.comment.Substring(0, item.comment.Length / 2)*@
                                                <br />
                                                @*@item.comment.Substring(item.comment.Length / 2)*@
                                            </td>
                                            <td>
                                                @for (int i = 0; i < item.rating; i++)
                                                {
                                                    <i class="fas fa-star filled" style="color:goldenrod"></i>

                                                }


                                                @for (int i = 0; i < 5 - item.rating; i++)
                                                {
                                                    <i class="fas fa-star" style="color:gainsboro"></i>
                                                }



                                            </td>

                                            <td>
                                                @if (item.statefeedback == 1)
                                                {

                                                    <span class="badge badge-pill bg-success-light">Confirm</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-pill bg-danger-light">Pending</span>


                                                }



                                            </td>
                                            <td>
                                                @if (item.feedbacktime.HasValue)
                                                {
                                                    @item.feedbacktime.Value.ToString("dd-MM-yyyy")
                                                }
                                            </td>

                                            @using (Html.BeginForm("feedbackweb", "feedbackwebsites", new { id = item.feedbackId }, FormMethod.Post))
                                            {

                                                <td>

                                                    @Html.ActionLink("Details", "Details", new { id = item.feedbackId }, new { @class = "btn btn-info" })

                                                    @Html.ActionLink("Delete", "Delete", new { id = item.feedbackId }, new { @class = "btn btn-danger" })










                                                </td>

                                            }
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
        <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>
















        @if (TempData["swal_message"] == "Are you sure you want to block this feedBack?")
        {
            <script>
        Swal.fire({
            title: "@ViewBag.title",
            text: "@TempData["swal_message"]",
            icon: "@ViewBag.icon",
            showCancelButton: true,
            confirmButtonText: "Confirm",
            cancelButtonText: "@ViewBag.cancelButton",
            allowOutsideClick: false, // prevent clicking outside the dialog to close it
            allowEscapeKey: false // prevent pressing the escape key to close it
        }).then((result) => {
            if (result.isConfirmed) {
                // User clicked "Confirm" button
                window.location.href = "/feedbackwebsites/Block";
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                // User clicked "Cancel" button
                // Do nothing or add additional behavior as needed
            }
        });
            </script>
        }


        @if (TempData["swal_message"] == "Are you sure you want to Accept Feedback?")
        {
            <script>
        Swal.fire({
            title: "@ViewBag.title",
            text: "@TempData["swal_message"]",
            icon: "@ViewBag.icon",
            showCancelButton: true,
            confirmButtonText: "Confirm",
            cancelButtonText: "@ViewBag.cancelButton",
            allowOutsideClick: false, // prevent clicking outside the dialog to close it
            allowEscapeKey: false // prevent pressing the escape key to close it
        }).then((result) => {
            if (result.isConfirmed) {
                // User clicked "Confirm" button
                window.location.href = "/feedbackwebsites/Acceptt";
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                // User clicked "Cancel" button
                // Do nothing or add additional behavior as needed
            }
        });
            </script>
        }



        @if (TempData["swal_message"] == "Are you sure you want to delete this feedBack?")
        {
            <script>
        Swal.fire({
            title: "@ViewBag.title",
            text: "@TempData["swal_message"]",
            icon: "@ViewBag.icon",
            showCancelButton: true,
            confirmButtonText: "Confirm",
            cancelButtonText: "@ViewBag.cancelButton",
            allowOutsideClick: false, // prevent clicking outside the dialog to close it
            allowEscapeKey: false // prevent pressing the escape key to close it
        }).then((result) => {
            if (result.isConfirmed) {
                // User clicked "Confirm" button
                window.location.href = "/feedbackwebsites/Acceptt";
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                // User clicked "Cancel" button
                // Do nothing or add additional behavior as needed
            }
        });
            </script>
        }

