@using System


@model Tuple<List<mainMasterpiesce.Models.patient>, List<mainMasterpiesce.Models.appointment>>


@{
    ViewBag.Title = "Profilesetting";
    Layout = "~/Views/Shared/_patientprofile.cshtml";
}






<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">

<div class="col-md-7 col-lg-8 col-xl-9">
    <div class="card">
        <div class="card-body">

            <!-- Profile Settings Form -->
            @using (Html.BeginForm("Edit", "DoctorsInfo", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row form-row">
                    <div class="col-12 col-md-12">
                        <div class="form-group">
                            <div class="change-avatar">
                                <div class="profile-img">

                                </div>
                                <div class="upload-img">
                                    <div class="change-photo-btn">
                                        <span><i class="fa fa-upload"></i> Upload Photo</span>
                                        <input type="file" class="upload" name="profpic">
                                    </div>
                                    <small class="form-text text-muted">
                                        Allowed JPG, GIF or PNG. Max
                                        size of 2MB
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>User Name</label>
                            <input type="text" class="form-control" value="@Model.Item1[0].patientName" name="userName">
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>Email ID</label>
                            <input type="text" class="form-control" value="@Model.Item1[0].AspNetUser.Email" name="Email">
                        </div>
                    </div>

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>Date of Birth</label>
                            @*@Html.TextBoxFor(model => model.Item1[0].birthday, "{0:yyyy-MM-dd}", new { @class = "form-control" })*@

                            @{

                                var birthday = @Model.Item1[0].birthday;

                            }
                            @*<input type="text" class="form-control" value=" @Convert.ToDateTime(birthday).ToString("dd-MM-yyyy")" name="birthday" id="mainbirth">*@

                            <input type="text" class="form-control" value="@birthday.Value.ToString("dd/MM/yyyy")" name="birthday" />

                            @*<input type="hidden" value="@Convert.ToDateTime(birthday).ToString("dd-MM-yyyy")" id="inptbirth" />*@


                        </div>
                    </div>

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>Phone No.</label>
                            <input type="text" class="form-control" value="@Model.Item1[0].AspNetUser.PhoneNumber" name="phone" oninput="CardName(this)">
                        </div>
                    </div>

                    @{string[] locat = Model.Item1[0].locationdetails.Split(',');

                    }

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>Country</label>
                            <select id="countriesDropdown" class="form-control" name="country" value="@locat[0]">




                                <option value="">@locat[0]</option>




                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>City</label>

                            <input type="text" class="form-control" value="@locat[1]" name="city">
                        </div>
                    </div>

                    <div class="submit-section">
                        <button type="submit" class="btn btn-primary submit-btn">Save Changes</button>
                    </div>

                    <!-- /Profile Settings Form -->

                </div>
            }
        </div>
        <!-- Footer -->


        <script>






        </script>
    </div>


</div>







<script>
        var birth = document.getElementById("inptbirth").value

        document.getElementById("mainbirth").value=birth;
        console.log(document.getElementById("inptbirth").value);
    const countriesApiUrl = 'https://api.teleport.org/api/countries/';

    // Get a reference to the dropdown list element
    const countriesDropdown = document.getElementById('countriesDropdown');

    fetch(countriesApiUrl)
        .then(response => response.json())
        .then(data => {
            // Loop through the list of countries and add each country name to the dropdown list
            data._links['country:items'].forEach(country => {
                const option = document.createElement('option');
                option.value = country.href;
                option.text = country.name;
                countriesDropdown.appendChild(option);
            });
        })
        .catch(error => console.error(error));


    console.log("fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")




    console.log(@Model.Item1[0].locationdetails.Split(',')[0])






    function CardName(input) {

        if (input.value.length > 17) {
            input.value = input.value.slice(0, 17);
        }
        if (isNaN(input.value)) {
            // Prevent non-numeric characters from being entered
            input.value = input.value.replace(/[^0-9]/g, '');
        }
        if (input.value.length < 10) {
            // Disable the submit button
            document.getElementById("reg").disabled = true;
            // Or display an error message
            document.getElementById("error_phone").textContent = "this field should be at least 10 digits";
        } else {
            // Enable the submit button
            document.getElementById("reg").disabled = false;
            // Clear the error message
            document.getElementById("error_phone").textContent = "";
        }
    }


</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>
@if (TempData["swal_message"] == "Your information has been updated successfully.")
{
    <script>
        Swal.fire({
            title: "@ViewBag.title",
            text: "@TempData["swal_message"]",
            icon: "@ViewBag.icon",

             allowOutsideClick: false, // prevent clicking outside the dialog to close it
            allowEscapeKey: false // prevent pressing the escape key to close it


        }).then(function () {
            window.location.href = "Profilesetting";

        });;
    </script>
}